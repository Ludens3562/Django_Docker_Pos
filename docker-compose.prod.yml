# docker-composeのバージョンを指定
version: "3.9"

# db(Postgres),app(Django)のコンテナを作成
services:
  db:
    container_name: postgres
    build:
      context: .
      dockerfile: containers/postgres/Dockerfile
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U "${POSTGRES_USER:-postgres}" || exit 1
      interval: 2s # 2秒に一回ヘルスチェック
      timeout: 5s
      retries: 3
      start_period: 30s
    # コンテナ内の環境変数を.env.prodを使って設定
    env_file:
      - .env.prod

  app:
    container_name: app
    build:
      context: .
      dockerfile: containers/django/Dockerfile
    volumes:
      - .:/code
      - ./static:/static
    # 8000番ポートをNginx側が接続できるよう開く
    expose:
      - "8000"
    # シェルスクリプトを実行
    command: sh -c "/usr/local/bin/entrypoint.sh"
    # コンテナ内の環境変数を.env.prodを使って設定
    env_file:
      - .env.prod
    tty: true
    depends_on:
      db:
        condition: service_healthy

  web:
    # コンテナ名をwebに指定
    container_name: web
    # NginxのDockerfileをビルドする
    build:
      # ビルドコンテキストはカレントディレクトリ
      context: .
      dockerfile: containers/nginx/Dockerfile
    # ボリュームを指定
    # ローカルの/staticをコンテナの/staticにマウントする
    volumes:
      - ./static:/static
    # ローカルの80番ボートをコンテナの80番ポートとつなぐ
    ports:
      - "80:80"
    # 先にappを起動してからwebを起動する
    depends_on:
      - app
      - react

  receipt:
    # コンテナ名をwebに指定
    container_name: receipt
    # NginxのDockerfileをビルドする
    build:
      # ビルドコンテキストはカレントディレクトリ
      context: .
      dockerfile: containers/receiptline/Dockerfile
    # ローカルの80番ボートをコンテナの80番ポートとつなぐ
    expose:
      - "6573"

  react:
    container_name: react
    build:
      context: .
      dockerfile: containers/react/Dockerfile
    volumes:
      - ./reactproj:/usr/src/app
      - react_node_modules:/usr/src/app/node_module
    expose:
      - "3000"
    ports:
      - "3000:3000"
    command: sh -c "/usr/local/bin/entrypoint.sh"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_OPTIONS=--openssl-legacy-provider
    stdin_open: true
    tty: true


volumes:
  db_data:
  static:
  react_node_modules: